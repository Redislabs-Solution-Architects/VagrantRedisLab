#!/bin/bash

echo "Existing databases:"
./curl_v1-bdbs_list_uids.sh

read -p "Enter UID to delete BDB (Ctrl+c to exit): " MOD_UID

echo "Getting config dump for DB $MOD_UID..."
./curl_v1-bdbs_ID.sh $MOD_UID
cat ./curl_v1-bdbs_ID.sh.json | \
jq \
'{aof_policy: .aof_policy,
authentication_admin_pass: .authentication_admin_pass,
authentication_redis_pass: .authentication_redis_pass,
authentication_sasl_pass: .authentication_sasl_pass,
authentication_sasl_uname: .authentication_sasl_uname,
authentication_ssl_client_certs: .authentication_ssl_client_certs,
authentication_ssl_crdt_certs: .authentication_ssl_crdt_certs,
authorized_subjects: .authorized_subjects,
auto_upgrade: .auto_upgrade,
backup: .backup,
backup_history: .backup_history,
backup_interval: .backup_interval,
bigstore: .bigstore,
bigstore_ram_size: .bigstore_ram_size,
conns: .conns,
conns_type: .conns_type,
data_internode_encryption: .data_internode_encryption,
data_persistence: .data_persistence,
dataset_import_sources: .dataset_import_sources,
db_conns_auditing: .db_conns_auditing,
default_user: .default_user,
email_alerts: .email_alerts,
eviction_policy: .eviction_policy,
flush_on_fullsync: .flush_on_fullsync,
generate_text_monitor: .generate_text_monitor,
gradual_src_max_sources: .gradual_src_max_sources,
gradual_src_mode: .gradual_src_mode,
gradual_sync_max_shards_per_source: .gradual_sync_max_shards_per_source,
gradual_sync_mode: .gradual_sync_mode,
hash_slots_policy: .hash_slots_policy,
implicit_shard_key: .implicit_shard_key,
internal: .internal,
master_persistence: .master_persistence,
max_aof_file_size: .max_aof_file_size,
max_aof_load_time: .max_aof_load_time,
max_client_pipeline: .max_client_pipeline,
max_connections: .max_connections,
max_pipelined: .max_pipelined,
memory_size: .memory_size,
metrics_export_all: .metrics_export_all,
mkms: .mkms,
module_list: .module_list,
mtls_allow_outdated_certs: .mtls_allow_outdated_certs,
mtls_allow_weak_hashing: .mtls_allow_weak_hashing,
name: .name,
oss_cluster: .oss_cluster,
oss_cluster_api_preferred_endpoint_type: .oss_cluster_api_preferred_endpoint_type,
oss_cluster_api_preferred_ip_type: .oss_cluster_api_preferred_ip_type,
oss_sharding: .oss_sharding,
port: .port,
proxy_policy: .proxy_policy,
rack_aware: .rack_aware,
recovery_wait_time: .recovery_wait_time,
redis_version: .redis_version,
repl_backlog_size: .repl_backlog_size,
replica_sources: .replica_sources,
replica_sync: .replica_sync,
replica_sync_connection_alarm_timeout_seconds: .replica_sync_connection_alarm_timeout_seconds,
replica_sync_dist: .replica_sync_dist,
replication: .replication,
resp3: .resp3,
roles_permissions: .roles_permissions,
sched_policy: .sched_policy,
shard_block_crossslot_keys: .shard_block_crossslot_keys,
shard_block_foreign_keys: .shard_block_foreign_keys,
shard_key_regex: .shard_key_regex,
sharding: .sharding,
shards_count: .shards_count,
shards_placement: .shards_placement,
skip_import_analyze: .skip_import_analyze,
slave_buffer: .slave_buffer,
slave_ha: .slave_ha,
slave_ha_priority: .slave_ha_priority,
snapshot_policy: .snapshot_policy,
ssl: .ssl,
support_syncer_reconf: .support_syncer_reconf,
sync: .sync,
sync_dedicated_threads: .sync_dedicated_threads,
sync_sources: .sync_sources,
syncer_log_level: .syncer_log_level,
syncer_mode: .syncer_mode,
throughput_ingress: .throughput_ingress,
topology_epoch: .topology_epoch,
tracking_table_max_keys: .tracking_table_max_keys,
type: .type,
version: .version}'\
>./$MOD_UID-DB_config.json
echo "Modifiable config dumped into $MOD_UID-DB_config.json:"
ls -l ./$MOD_UID-DB_config.json
echo "Modify as needed then run for changes: ./curl_v1-bdbs_MODIFY_ID_CONFIGfile.sh $MOD_UID ./$MOD_UID-DB_config.json"
